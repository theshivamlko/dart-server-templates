name: Dev Environment Workflow
 # Events that trigger workflow
 
 # on: [push,workflow_dispatch,issues]
on: 
  pull_request:
      types:
        - opened
  workflow_dispatch:
  push:
    branches: 
        - main
        - branch*
    tags:
      - build v*
    paths-ignore:
      - '.github/workflows/*'  
    
env: # global variables
  DB_NAME: svarupa-db
  APP_VERSION: 1.3.0
  ANDROID_APP_ID: 1:663276069652:android:a9f2629ec50bc9743d9801
  GOOGLE_JSON_FILE: ${{secrets.GOOGLE_JSON_FILE}} # will come from environment if set
 
jobs:  
  DevServer: # Custom Jobs name
   environment: Development
   env: # local variables
      db-username: rootUser
      db-password: rootPass@123

   runs-on: macos-12  # Environment to run
   outputs:
    abc: ${{steps.some-id1.outputs.version}}
   steps:
    - name: Print greeting  # Name of script
      id: some-id2 #id for script
      run : echo "Hello World"

    - name: Print Published
      if: steps.some-id2.outcome == 'success' # if previous step is success then only run this step
      run: echo "DONE Published... SUCCESS"
    - name: Print Published
      if: steps.some-id2.outcome == 'failure' # if previous step is success then only run this step
      run: echo "DONE Published... FAILURE"

      # | ls | cd dart-server-templates | echo "ABCD" > abc.txt | git add . | git commit -m "txt" | git push origin main
    - name: List all folders 
      run:  ls -alR
    - name: Get Code
      uses: actions/checkout@v4
    - name: Caching dependecies  
      uses: actions/cache@v4
      with:
         path: /Users/runner/hostedtoolcache/dart  # path for macOS
         key: dart-sdk-${{hashFiles('**/pubspec.lock')}} 
          #hasfile used if dependencies changed,
           #  folder will change and again download new dependencies
      # no need of with as by default same repo will be used where yml file is
    - name: Setup Dart SDK 3.2
      uses: dart-lang/setup-dart@v1.6.0
      with: 
        sdk: stable # 3.2
    - name: Dart Information 
      run: dart info   
    - name: Dart Pub Get
      run: dart pub get  
    - name: Dart Test
      run: dart test
    - name: "Create JSON file to share to other JOBS"
      id: some-id1
      run: |
          echo '{"version": "${{env.APP_VERSION}}", "name": "example"}' > output.json
          echo "::set-output name=version::$( < output.json)"
          echo SOME_VAR_SECRET1 ${{secrets.SOME_VAR_SECRET1}}
          echo SOME_VAR1 ${{vars.SOME_VAR1}}

    # - name: "Publish JSON file"
    #   run: 

      
  DartServerDeployMacOS:
    needs: DevServer  # waits for given job to finish
    runs-on: macos-12  # Environment to run

      
    steps: 
      - name: Print greeting  # Name of script
        run : echo "Hello World"
      - name: Print Published
        run: echo "DONE Published..."
        # | ls | cd dart-server-templates | echo "ABCD" > abc.txt | git add . | git commit -m "txt" | git push origin main
      - name: List all folders 
        run:  ls -alR
      - name: Get Code
        uses: actions/checkout@v4
      - name: Caching dependecies  
        uses: actions/cache@v4
        with:
          path: /Users/runner/hostedtoolcache/dart  # path for macOS
          key: dart-sdk-${{hashFiles('**/pubspec.lock')}}   
        # no need of with as by default same repo will be used where yml file is
      - name: Setup Dart SDK 3.2
        uses: dart-lang/setup-dart@v1.6.0
        with: 
          sdk: 3.2
      - name: Dart Information 
        run: dart info   
      - name: Dart Pub Get
        run: dart pub get  
      - name: Dart Build
        run: |  
              mkdir -p build/output/release
              dart compile exe bin/main.dart -o build/output/release/server   
      - name: Upload artifacts
        run: | 
          echo "Dowloading..."
          cd build/output/release/
          ls -alR
          cd     
      - uses: actions/upload-artifact@v4
        with: 
          name: dart-server-build-file@V1
          path: |
            build/output/release
      - name: "Publish"     
        run: echo "Publishing..."
      - uses: actions/download-artifact@v4 #download artifacts from previous jobs
        with: 
          name: dart-server-build-file@V1
      - name: "Output filename"
        run: echo ${{needs.DevServer.outputs.abc}}




      

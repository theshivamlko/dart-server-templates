name: Dev Environment Workflow
# Events that trigger workflow
on: [push,workflow_dispatch]
  
jobs: 
  DevServer: # Custom Jobs name
   runs-on: ubuntu-latest  # Environment to run
   steps: 
    - name: Print greeting  # Name of script
      run : echo "Hello World"
    - name: Print Published
      run: echo "DONE Published..."
      # | ls | cd dart-server-templates | echo "ABCD" > abc.txt | git add . | git commit -m "txt" | git push origin main
    - name: List all folders 
      run:  ls -alR
    - name: Get Code
      uses: actions/checkout@v4
      # no need of with as by default same repo will be used where yml file is
    - name: Setup Dart SDK 3.2
      uses: dart-lang/setup-dart@v1.6.0
      with: 
        sdk: 3.2
    - name: Dart Information 
      run: dart info   
    - name: Dart Pub Get
      run: dart pub get  
    - name: Dart Test
      run: dart test 
      
  DartServerDeploy:
    needs: DevServer  # waits for given job to finish
    runs-on: ubuntu-latest  # Environment to run
    steps: 
      - name: Print greeting  # Name of script
        run : echo "Hello World"
      - name: Print Published
        run: echo "DONE Published..."
        # | ls | cd dart-server-templates | echo "ABCD" > abc.txt | git add . | git commit -m "txt" | git push origin main
      - name: List all folders 
        run:  ls -alR
      - name: Get Code
        uses: actions/checkout@v4
        # no need of with as by default same repo will be used where yml file is
      - name: Setup Dart SDK 3.2
        uses: dart-lang/setup-dart@v1.6.0
        with: 
          sdk: 3.2
      - name: Dart Information 
        run: dart info   
      - name: Dart Pub Get
        run: dart pub get  
      - name: Dart Build
        run: |  
              mkdir -p build/output/release
              dart compile exe bin/main.dart -o build/output/release/server   
      - name: Deploy
        run: echo "Deploying..."        


      
